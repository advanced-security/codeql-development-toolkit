name: Fetch and Install QLT
description: |
  Fetches and installs QLT. 
inputs:
  qlt-version:
    description: |
      The version of QLT to be downloaded.
    required: false
    default: 'latest'

  add-to-path:
    description: |
      Add QLT to the system path
    required: false
    default: 'true'

outputs:
  qlt-home:
    description: 'The directory containing the QLT installation'
    value: ${{ steps.install-qlt.outputs.qlt-home }}

runs:
  using: composite
  steps:
    - name: Install QLT
      id: install-qlt
      env:
        RUNNER_OS: ${{ runner.os }}
        RUNNER_TEMP: ${{ runner.temp }}
        GITHUB_TOKEN: ${{ github.token }}
        ADD_TO_PATH: ${{ inputs.add-to-path }}
        QLT_VERSION: ${{ inputs.qlt-version }}
        QLT_HOME: ${{ inputs.qlt-home }}
      shell: bash
      run: |
        echo "::debug::Determining QLT release for $RUNNER_OS"
        case $RUNNER_OS in
          "Linux")
            RELEASE_PATTERN="qlt-linux-x86_64.zip"
            ;;
          *)
            echo "::error::Unsupported runner operating system $RUNNER_OS"
            exit 1
            ;;
        esac
        echo "::debug::Selected $RELEASE_PATTERN"

        if [ "$QLT_HOME" == "" ]
        then
          echo "::debug::Creating temporary QLT home"
          QLT_HOME=$(mktemp -d -p $RUNNER_TEMP qlt-home-XXXXXXXXXX)
        else
          echo "::debug::Creating CodeQL home at $QLT_HOME"
          mkdir -p $QLT_HOME
        fi

        echo "::debug::Changing directory to $QLT_HOME"
        pushd $QLT_HOME

        echo "::debug::Downloading QLT version $QLT_VERSION"
        if [ "$QLT_VERSION" == "latest" ]
        then
          # download the actual bundle 
          gh release download -R github/codeql-development-lifecycle-toolkit --pattern "$RELEASE_PATTERN"
        else
          gh release download "$QLT_VERSION" -R github/codeql-development-lifecycle-toolkit --pattern "$RELEASE_PATTERN"
        fi
        echo "::debug::Unpacking QLT"
        unzip -q $RELEASE_PATTERN

        if [ "$ADD_TO_PATH" == "true" ]
        then
          echo "::debug::Adding QLT '$(pwd)/qlt' to system path"
          echo "$(pwd)/qlt" >> $GITHUB_PATH
        fi

        echo "::debug::Setting output parameter qlt-home to $(pwd)"
        echo "qlt-home=$(pwd)" >> $GITHUB_OUTPUT

        popd
        echo "::debug::Done."

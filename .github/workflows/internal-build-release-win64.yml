name: ðŸªŸ Build Release (Windows x64)

on:
  workflow_call:
    inputs:
        version:
          description: |
            The version to release. (eg: 0.1.2, exclude the 'v'.). 
          required: true
          type: string 
          
jobs:
  build-win64:
    runs-on: windows-latest 
    
    steps:
    - uses: actions/checkout@v3
    - name: Setup .NET
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: 6.0.x
    - name: Restore dependencies
      run: dotnet restore
    - name: Build
      run: dotnet build -c Release --no-restore

    - name: Build Bundle
      shell: pwsh
      run: |
        echo "Current Directory $(Get-Location)"
        # build the project 
        dotnet publish .\src\CodeQLToolkit.Core\CodeQLToolkit.Core.csproj /p:PublishProfile=.\src\CodeQLToolkit.Core\Properties\PublishProfiles\Windows-x64.pubxml
        Copy-Item .\src\CodeQLToolkit.Core\bin\Release\net6.0\publish\windows-x64\CodeQLToolkit.Core.exe .\src\CodeQLToolkit.Core\bin\Release\net6.0\publish\windows-x64\qlt.exe
        

    - uses: actions/setup-python@v5
      with:
        python-version: '3.11'

    - name: Build CodeQL Bundle Tool for Packaging
      shell: pwsh 
      run: |
        # need this for the bundling to work.
        pip install poetry 
        pip install -U pyinstaller 

        # run the packaging 
        .\scripts\build_codeql_bundle_dist.ps1 -Version 0.4.0 -WorkDirectory dist -DestinationDirectory .\src\CodeQLToolkit.Core\bin\Release\net6.0\publish\windows-x64\tools\
      env:
        GH_TOKEN: ${{ github.token }}

    - name: Build Bundle Archive
      shell: pwsh
      run: |
        # create bundle 
        $ARCHIVE="$(Get-Location)/qlt-windows-x64.zip"        
        Push-Location .\src\CodeQLToolkit.Core\bin\Release\net6.0\publish\windows-x64
        Compress-Archive -Path "*" -DestinationPath $ARCHIVE 
        Pop-Location

    - name: Upload build artifacts
      uses: actions/upload-artifact@v4
      with:
        name: qlt-dist
        path: qlt*.zip

    - name: Upload Build Artifacts
      shell: pwsh
      run: |
        Write-Host (Get-Location)
        gh release upload v${{inputs.version}} ./qlt-windows-x64.zip
      env:
        GH_TOKEN: ${{ github.token }}
